<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>汪严玮的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wangyw15.github.io/"/>
  <updated>2017-07-28T07:59:28.626Z</updated>
  <id>http://wangyw15.github.io/</id>
  
  <author>
    <name>汪严玮</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bridge.NET 做的本地音乐播放器</title>
    <link href="http://wangyw15.github.io/2017/07/28/bridgedotnet-musicPlayer/"/>
    <id>http://wangyw15.github.io/2017/07/28/bridgedotnet-musicPlayer/</id>
    <published>2017-07-28T06:25:44.000Z</published>
    <updated>2017-07-28T07:59:28.626Z</updated>
    
    <content type="html"><![CDATA[<p>上回说到Bridge.NET，于是这次做了小东西，C#代码是这样的:</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> Bridge;</div><div class="line"><span class="keyword">using</span> Bridge.Html5;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">mediaPlayer</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">App</span></div><div class="line">    &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            Document.Head.GetElementsByTagName(<span class="string">"title"</span>)[<span class="number">0</span>].InnerHTML = <span class="string">"Music player"</span>;</div><div class="line"></div><div class="line">            <span class="keyword">var</span> audioElement = <span class="keyword">new</span> HTMLAudioElement();</div><div class="line">            audioElement.Volume = <span class="number">0.5</span>;</div><div class="line">            audioElement.PlaybackRate = <span class="number">1</span>;</div><div class="line">            Document.Body.AppendChild(audioElement);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> buttonPlayDefault = <span class="keyword">new</span> HTMLButtonElement();</div><div class="line">            buttonPlayDefault.InnerHTML = <span class="string">"Play default music"</span>;</div><div class="line">            buttonPlayDefault.OnClick += (e) =&gt;</div><div class="line">            &#123;</div><div class="line">                audioElement.Src = <span class="string">"music.mp3"</span>;</div><div class="line">                audioElement.Play();</div><div class="line">            &#125;;</div><div class="line">            Document.Body.AppendChild(buttonPlayDefault);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> labelAutoPlay = <span class="keyword">new</span> HTMLLabelElement();</div><div class="line">            labelAutoPlay.HtmlFor = <span class="string">"autoPlay"</span>;</div><div class="line">            labelAutoPlay.InnerHTML = <span class="string">"Auto play"</span>;</div><div class="line"></div><div class="line"></div><div class="line">            <span class="keyword">var</span> autoPlay = <span class="keyword">new</span> HTMLInputElement();</div><div class="line">            autoPlay.Type = InputType.Checkbox;</div><div class="line">            autoPlay.Id = <span class="string">"autoPlay"</span>;</div><div class="line"></div><div class="line">            <span class="keyword">var</span> getFile = <span class="keyword">new</span> HTMLInputElement();</div><div class="line">            getFile.Type = InputType.File;</div><div class="line">            getFile.OnChange += (e) =&gt;</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">var</span> audio = getFile.Files[<span class="number">0</span>];</div><div class="line">                audioElement.Src = Script.Call&lt;<span class="keyword">string</span>&gt;(<span class="string">"URL.createObjectURL"</span>, audio);</div><div class="line">                <span class="keyword">if</span>(autoPlay.Checked)</div><div class="line">                    audioElement.Play();</div><div class="line">            &#125;;</div><div class="line">            Document.Body.AppendChild(getFile);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line">            </div><div class="line">            Document.Body.AppendChild(autoPlay);</div><div class="line">            Document.Body.AppendChild(labelAutoPlay);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> buttonPlay = <span class="keyword">new</span> HTMLButtonElement();</div><div class="line">            buttonPlay.InnerHTML = <span class="string">"Play"</span>;</div><div class="line">            buttonPlay.OnClick += (e) =&gt;</div><div class="line">            &#123;</div><div class="line">                audioElement.Play();</div><div class="line">            &#125;;</div><div class="line">            Document.Body.AppendChild(buttonPlay);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> buttonPause = <span class="keyword">new</span> HTMLButtonElement();</div><div class="line">            buttonPause.InnerHTML = <span class="string">"Pause"</span>;</div><div class="line">            buttonPause.OnClick += (e) =&gt;</div><div class="line">            &#123;</div><div class="line">                audioElement.Pause();</div><div class="line">            &#125;;</div><div class="line">            Document.Body.AppendChild(buttonPause);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> buttonStop = <span class="keyword">new</span> HTMLButtonElement();</div><div class="line">            buttonStop.InnerHTML = <span class="string">"Stop"</span>;</div><div class="line">            buttonStop.OnClick += (e) =&gt;</div><div class="line">            &#123;</div><div class="line">                audioElement.CurrentTime = <span class="number">0</span>;</div><div class="line">                audioElement.Pause();</div><div class="line">            &#125;;</div><div class="line">            Document.Body.AppendChild(buttonStop);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> labelLoop = <span class="keyword">new</span> HTMLLabelElement();</div><div class="line">            labelLoop.HtmlFor = <span class="string">"loop"</span>;</div><div class="line">            labelLoop.InnerHTML = <span class="string">"Loop"</span>;</div><div class="line"></div><div class="line">            <span class="keyword">var</span> loop = <span class="keyword">new</span> HTMLInputElement();</div><div class="line">            loop.Type = InputType.Checkbox;</div><div class="line">            loop.Id = <span class="string">"loop"</span>;</div><div class="line">            loop.OnChange += (e) =&gt;</div><div class="line">            &#123;</div><div class="line">                audioElement.Loop = loop.Checked;</div><div class="line">            &#125;;</div><div class="line">            Document.Body.AppendChild(loop);</div><div class="line">            Document.Body.AppendChild(labelLoop);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> labelVolume = <span class="keyword">new</span> HTMLLabelElement();</div><div class="line">            labelVolume.InnerHTML = <span class="string">"Volume:50"</span>;</div><div class="line">            Document.Body.AppendChild(labelVolume);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> volume = <span class="keyword">new</span> HTMLInputElement();</div><div class="line">            volume.Type = InputType.Range;</div><div class="line">            volume.Max = <span class="string">"100"</span>;</div><div class="line">            volume.Min = <span class="string">"0"</span>;</div><div class="line">            volume.Value = <span class="string">"50"</span>;</div><div class="line">            volume.OnInput += (e) =&gt;</div><div class="line">            &#123;</div><div class="line">                audioElement.Volume = <span class="keyword">double</span>.Parse(volume.Value) / <span class="number">100</span>;</div><div class="line">                labelVolume.InnerHTML = <span class="string">"Volume:"</span> + volume.Value;</div><div class="line">            &#125;;</div><div class="line">            Document.Body.AppendChild(volume);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> labelRate = <span class="keyword">new</span> HTMLLabelElement();</div><div class="line">            labelRate.InnerHTML = <span class="string">"Rate:1"</span>;</div><div class="line">            Document.Body.AppendChild(labelRate);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line"></div><div class="line">            <span class="keyword">var</span> rate = <span class="keyword">new</span> HTMLInputElement();</div><div class="line">            rate.Type = InputType.Range;</div><div class="line">            rate.Max = <span class="string">"4"</span>;</div><div class="line">            rate.Min = <span class="string">"0"</span>;</div><div class="line">            rate.Step = <span class="string">"0.1"</span>;</div><div class="line">            rate.Value = <span class="string">"1"</span>;</div><div class="line">            rate.OnInput += (e) =&gt;</div><div class="line">            &#123;</div><div class="line">                audioElement.PlaybackRate = <span class="keyword">double</span>.Parse(rate.Value);</div><div class="line">                labelRate.InnerHTML = <span class="string">"Rate:"</span> + rate.Value;</div><div class="line">            &#125;;</div><div class="line">            Document.Body.AppendChild(rate);</div><div class="line">            Document.Body.AppendChild(<span class="keyword">new</span> HTMLBRElement());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h6 id="我觉得用起来还行吧。。。"><a href="#我觉得用起来还行吧。。。" class="headerlink" title="我觉得用起来还行吧。。。"></a>我觉得用起来还行吧。。。</h6><p>想看生成的JS？<br><a href="/musicPlayer_BridgeNET/main.js" title="这个就是哦">脚本文件在这里</a></p>
<h6 id="我反正是不打算看懂。。。"><a href="#我反正是不打算看懂。。。" class="headerlink" title="我反正是不打算看懂。。。"></a>我反正是不打算看懂。。。</h6><p>下面是效果</p>
<iframe src="/musicPlayer_BridgeNET/player.html" width="200" height="300"></iframe>

<p>总结：用起来还行，C#又朝着全平台迈出了一步</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上回说到Bridge.NET，于是这次做了小东西，C#代码是这样的:&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div 
    
    </summary>
    
    
      <category term="Bridge.NET Csharp Front-End" scheme="http://wangyw15.github.io/tags/Bridge-NET-Csharp-Front-End/"/>
    
  </entry>
  
  <entry>
    <title>初尝Bridge.NET(C#转js)</title>
    <link href="http://wangyw15.github.io/2017/07/23/try-bridgedotnet/"/>
    <id>http://wangyw15.github.io/2017/07/23/try-bridgedotnet/</id>
    <published>2017-07-23T13:06:20.000Z</published>
    <updated>2017-07-23T13:26:47.158Z</updated>
    
    <content type="html"><![CDATA[<p>暑假过去三个星期了，游戏都玩腻了，闲得慌</p>
<h6 id="其实是找不到人一起玩…"><a href="#其实是找不到人一起玩…" class="headerlink" title="其实是找不到人一起玩…"></a>其实是找不到人一起玩…</h6><p>闲着也没事干，就开始逛起了谷歌</p>
<h6 id="不要问我怎么逛的"><a href="#不要问我怎么逛的" class="headerlink" title="不要问我怎么逛的"></a>不要问我怎么逛的</h6><p>发现了一个神奇的开源软件，名字叫Bridge.NET，这里是<br><a href="https://github.com/bridgedotnet/Bridge" title="bridgedotnet/Bridge" target="_blank" rel="external">Github仓库</a></p>
<p>介绍是这么说的：C# to JavaScript compiler. Write modern mobile and web apps in C#. Run them anywhere in JavaScript with Bridge.NET.</p>
<p>听起来很厉害的样子，我就迫不及待地下下来尝试一番。</p>
<p>这个其实是一个Visual Studio的一个插件，不大，只有5MB。</p>
<p>新建项目后，我随便写了点，看起来是这样的<br><img src="/2017/07/23/try-bridgedotnet/Code.png" alt="Code" title="就这样的"></p>
<h6 id="真的是随便写的，不要吐槽我…"><a href="#真的是随便写的，不要吐槽我…" class="headerlink" title="真的是随便写的，不要吐槽我…"></a>真的是随便写的，不要吐槽我…</h6><p>C#是强类型语言，js里那么自由的写法消失了。。</p>
<p>方法上的Ready标志代表会在加载时运行。</p>
<p>生成出来的js文件是不大，但是，Bridge.NET的那坨js就不小了，有10MB。。。不过有精简版的，也要482KB，还是比完整版好多了。</p>
<p>目前来说，是个大坑，某些功能还是要js来实现。不过，写起来是还行的，看以后会不会有更多的人去用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;暑假过去三个星期了，游戏都玩腻了，闲得慌&lt;/p&gt;
&lt;h6 id=&quot;其实是找不到人一起玩…&quot;&gt;&lt;a href=&quot;#其实是找不到人一起玩…&quot; class=&quot;headerlink&quot; title=&quot;其实是找不到人一起玩…&quot;&gt;&lt;/a&gt;其实是找不到人一起玩…&lt;/h6&gt;&lt;p&gt;闲着也没事干
    
    </summary>
    
      <category term="C#" scheme="http://wangyw15.github.io/categories/C/"/>
    
    
      <category term="C# dotnet front-end" scheme="http://wangyw15.github.io/tags/C-dotnet-front-end/"/>
    
  </entry>
  
  <entry>
    <title>开一个Minecraft的服务器</title>
    <link href="http://wangyw15.github.io/2017/03/19/Make-A-Minecraft-Server/"/>
    <id>http://wangyw15.github.io/2017/03/19/Make-A-Minecraft-Server/</id>
    <published>2017-03-19T01:11:30.000Z</published>
    <updated>2017-03-19T02:34:27.880Z</updated>
    
    <content type="html"><![CDATA[<p>应同学的要求，我就来写一篇关于Minecraft开服的教程。</p>
<h1 id="服务器下载"><a href="#服务器下载" class="headerlink" title="服务器下载"></a>服务器下载</h1><p>这个很简单，链接地址在下面</p>
<p><a href="https://s3.amazonaws.com/Minecraft.Download/versions/{Version}/minecraft_server.{Version}.jar" target="_blank" rel="external">https://s3.amazonaws.com/Minecraft.Download/versions/{Version}/minecraft_server.{Version}.jar</a></p>
<p>把链接里面的{Version}替换成你想要的服务器版本，例如：<a href="https://s3.amazonaws.com/Minecraft.Download/versions/1.11.2/minecraft_server.1.11.2.jar" title="Minecraft 1.11.2 服务器下载地址" target="_blank" rel="external">https://s3.amazonaws.com/Minecraft.Download/versions/1.11.2/minecraft_server.1.11.2.jar</a>，这个链接下载的是Minecraft 1.11.2的服务器。</p>
<h1 id="开启服务器"><a href="#开启服务器" class="headerlink" title="开启服务器"></a>开启服务器</h1><p>首先确定你安装了java：在命令行里输入java，如果显示出一大串东西，那么就可以继续了。<br>把之前下好的服务器放在一个单独的文件夹里，在文件夹里新建一个叫start.cmd的文件，里面输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@echo off</div><div class="line">java -jar 服务器文件的名字 nogui</div></pre></td></tr></table></figure></p>
<p>再新建一个叫eula.txt的文件，里面输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">eula=true</div></pre></td></tr></table></figure></p>
<p>保存退出，打开start.cmd，出现Done的字样，服务器就开好了。<br>不过这时，你的服务器只能在你家的局域网里使用，如果想要找其他人一起来，那就需要端口映射，这个我们下次再说。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;应同学的要求，我就来写一篇关于Minecraft开服的教程。&lt;/p&gt;
&lt;h1 id=&quot;服务器下载&quot;&gt;&lt;a href=&quot;#服务器下载&quot; class=&quot;headerlink&quot; title=&quot;服务器下载&quot;&gt;&lt;/a&gt;服务器下载&lt;/h1&gt;&lt;p&gt;这个很简单，链接地址在下面&lt;/p&gt;
&lt;p
    
    </summary>
    
      <category term="Games" scheme="http://wangyw15.github.io/categories/Games/"/>
    
    
      <category term="Minecraft" scheme="http://wangyw15.github.io/tags/Minecraft/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio 2017 正式版初体验(1)</title>
    <link href="http://wangyw15.github.io/2017/03/11/vs2017-experience/"/>
    <id>http://wangyw15.github.io/2017/03/11/vs2017-experience/</id>
    <published>2017-03-11T05:04:07.000Z</published>
    <updated>2017-03-11T05:29:42.746Z</updated>
    
    <content type="html"><![CDATA[<p>在3月7日的时候，Microsoft发布了Visual Studio 2017，我在3月10日的时候下载下来体验了一下，总体感觉不错。</p>
<h1 id="安装界面"><a href="#安装界面" class="headerlink" title="安装界面"></a>安装界面</h1><p>最直观的感受应该是安装界面，放几张张图自行感受</p>
<p><img src="/2017/03/11/vs2017-experience/installer_ui.png" alt="Visual Studio 2017 Installer" title="Visual Studio 2017 Installer"></p>
<p><img src="/2017/03/11/vs2017-experience/installer_ui_2.png" alt="Visual Studio 2017 Installer" title="Visual Studio 2017 Installer"></p>
<p>现在，C#不是必选选项了，这对于用vs写其他语言的人来说是好消息。</p>
<h2 id="注意，微软只提供了在线安装包，但是只要不选移动开发的组件，下载速度还是很快的。"><a href="#注意，微软只提供了在线安装包，但是只要不选移动开发的组件，下载速度还是很快的。" class="headerlink" title="注意，微软只提供了在线安装包，但是只要不选移动开发的组件，下载速度还是很快的。"></a>注意，微软只提供了在线安装包，但是只要不选移动开发的组件，下载速度还是很快的。</h2><h1 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h1><p>Visual Studio的图标也被重新设计了</p>
<p><img src="/2017/03/11/vs2017-experience/vs2017_icon.png" alt="Visual Studio 2017 Icon"></p>
<p>进到主界面，与vs2015有着极大的不同</p>
<p><img src="/2017/03/11/vs2017-experience/vs2017_ui.png" alt="Visual Studio 2017 Icon"></p>
<p>新闻被挪到界面右边，占据的空间也小了，界面愈发简洁。</p>
<p>其他的我暂时没发现什么，等到以后继续写吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在3月7日的时候，Microsoft发布了Visual Studio 2017，我在3月10日的时候下载下来体验了一下，总体感觉不错。&lt;/p&gt;
&lt;h1 id=&quot;安装界面&quot;&gt;&lt;a href=&quot;#安装界面&quot; class=&quot;headerlink&quot; title=&quot;安装界面&quot;&gt;&lt;/a
    
    </summary>
    
      <category term="Visual-Studio" scheme="http://wangyw15.github.io/categories/Visual-Studio/"/>
    
    
      <category term="VS2017" scheme="http://wangyw15.github.io/tags/VS2017/"/>
    
  </entry>
  
  <entry>
    <title>C#单行计算器（除去必要代码，真的只有一行）</title>
    <link href="http://wangyw15.github.io/2017/03/05/2017-3-5-20-41/"/>
    <id>http://wangyw15.github.io/2017/03/05/2017-3-5-20-41/</id>
    <published>2017-03-05T12:41:53.000Z</published>
    <updated>2017-03-05T13:16:53.752Z</updated>
    
    <content type="html"><![CDATA[<p>废话不多说，直接上代码</p>
<p>P.S. 注意要添加对“System.Data”的引用，然后在代码里引用”System.Data”命名空间<br>P.P.S ↑上面那行应该不算吧…<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Console.WriteLine((<span class="keyword">new</span> DataTable()).Compute(Console.ReadLine(), <span class="string">""</span>));</div></pre></td></tr></table></figure></p>
<h3 id="运行顺序"><a href="#运行顺序" class="headerlink" title="运行顺序:"></a>运行顺序:</h3><h3 id="①-new-DataTable"><a href="#①-new-DataTable" class="headerlink" title="① new DataTable()"></a>① new DataTable()</h3><h3 id="②-Console-ReadLine"><a href="#②-Console-ReadLine" class="headerlink" title="② Console.ReadLine()"></a>② Console.ReadLine()</h3><h3 id="③-DataTable-Compute"><a href="#③-DataTable-Compute" class="headerlink" title="③ DataTable.Compute()"></a>③ DataTable.Compute()</h3><h3 id="④-Console-WriteLine"><a href="#④-Console-WriteLine" class="headerlink" title="④ Console.WriteLine()"></a>④ Console.WriteLine()</h3><h6 id="其实并没有什么用…"><a href="#其实并没有什么用…" class="headerlink" title="其实并没有什么用…"></a>其实并没有什么用…</h6><h6 id="感觉也没人能看懂…"><a href="#感觉也没人能看懂…" class="headerlink" title="感觉也没人能看懂…"></a>感觉也没人能看懂…</h6>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;废话不多说，直接上代码&lt;/p&gt;
&lt;p&gt;P.S. 注意要添加对“System.Data”的引用，然后在代码里引用”System.Data”命名空间&lt;br&gt;P.P.S ↑上面那行应该不算吧…&lt;br&gt;&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;
    
    </summary>
    
      <category term="C#" scheme="http://wangyw15.github.io/categories/C/"/>
    
    
      <category term="单行程序" scheme="http://wangyw15.github.io/tags/%E5%8D%95%E8%A1%8C%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>我的C#学习日记(无边框移动)</title>
    <link href="http://wangyw15.github.io/2017/03/05/2017-3-5-19-57/"/>
    <id>http://wangyw15.github.io/2017/03/05/2017-3-5-19-57/</id>
    <published>2017-03-05T11:57:46.000Z</published>
    <updated>2017-03-05T13:16:53.752Z</updated>
    
    <content type="html"><![CDATA[<p>当我们在开发软件的时候，有时候设计界面，带着边框不好看，就把BorderStyle设置成None，但是这样就不能移动了，这时候，就需要代码了。<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Point offset; <span class="comment">//记录偏移量</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form_MouseDown</span>(<span class="params"><span class="keyword">object</span> sender, MouseEventArgs e</span>) <span class="comment">//窗体的MouseDown事件</span></span></div><div class="line">&#123;</div><div class="line">    offset = <span class="keyword">new</span> Point(-e.X, -e.Y); <span class="comment">//记录偏移量</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form_MouseMove</span>(<span class="params"><span class="keyword">object</span> sender, MouseEventArgs e</span>) <span class="comment">//窗体的MouseMove事件</span></span></div><div class="line">&#123;</div><div class="line">    Point pos = MousePosition; <span class="comment">//获取鼠标指针绝对坐标</span></div><div class="line">    pos.Offset(offset.X, offset.Y); <span class="comment">//将坐标偏移，使鼠标指针坐标偏移到窗口左上角位置</span></div><div class="line">    Location = pos; <span class="comment">//设置位置</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这样之后，窗体就能无边框移动了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当我们在开发软件的时候，有时候设计界面，带着边框不好看，就把BorderStyle设置成None，但是这样就不能移动了，这时候，就需要代码了。&lt;br&gt;&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
    
    </summary>
    
      <category term="C#" scheme="http://wangyw15.github.io/categories/C/"/>
    
    
      <category term="C# Programming Study" scheme="http://wangyw15.github.io/tags/C-Programming-Study/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇文章！</title>
    <link href="http://wangyw15.github.io/2017/03/05/My-first-article/"/>
    <id>http://wangyw15.github.io/2017/03/05/My-first-article/</id>
    <published>2017-03-05T08:32:31.000Z</published>
    <updated>2017-03-05T13:16:53.751Z</updated>
    
    <content type="html"><![CDATA[<p>这意味着什么？我终于有博客啦~(≧▽≦)/~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这意味着什么？我终于有博客啦~(≧▽≦)/~&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wangyw15.github.io/2017/03/05/hello-world/"/>
    <id>http://wangyw15.github.io/2017/03/05/hello-world/</id>
    <published>2017-03-05T08:24:46.965Z</published>
    <updated>2017-03-05T08:24:47.022Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
